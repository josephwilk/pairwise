{"name":"Pairwise","tagline":"Ruby based tool for selecting a smaller number of test input combinations (using pairwise generation) rather than exhaustively testing all possible permutations.","google":"","body":"#Pairwise\r\n\r\n##Installing\r\n\r\n<pre><code>gem install pairwise</code></pre>\r\n\r\n##Using Pairwise with Rspec\r\n\r\n```ruby\r\ndescribe \"something\" do\r\n  Pairwise.combinations([1,2], [1,2], [2,3]).each do |(event_id, new_event_id, media_id)|\r\n    it \"should do something with these input values\" do\r\n      ...\r\n    end\r\n  end\r\nend\r\n```\r\n\r\n##Using Pairwise with Cucumber\r\n\r\nCreate a yaml file with your input combinations:\r\n<pre><code>event with image: [Football, Basketball, Soccer]\r\nevent without image: [Football, Basketball, Soccer]\r\nmedia: [Image, Video, Music]</code></pre>\r\n\r\nRun pairwise specifying the yaml file\r\n\r\n<pre><code>$ pairwise inputs.yml</code></pre>\r\n\r\nThis will output a table ready to be used in your Cucumber features.\r\n\r\n<pre><code>| media | event without image | event with image |\r\n| Image | Football            | Football         |\r\n| Image | Basketball          | Basketball       |\r\n| Image | Soccer              | Soccer           |\r\n| Video | Football            | Soccer           |\r\n| Video | Basketball          | Football         |\r\n| Video | Soccer              | Basketball       |\r\n| Music | Football            | Basketball       |\r\n| Music | Basketball          | Soccer           |\r\n| Music | Soccer              | Football         |</code></pre>\r\n\r\n#Author\r\n@josephwilk","note":"Don't delete this file! It's used internally to help with page regeneration."}